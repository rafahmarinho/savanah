trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  - group: 'Veracode Api Key'
  - name: veracodeAppProfile
    value: '$(Build.DefinitionName)'
  - name: srcPack
    value: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)'
  - name: analisysPack
    value: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)/analisysPack.zip'
steps:
- task: CmdLine@2
  inputs:
    script: 'npm install'
  displayName: 'NPM'

- task: CmdLine@2
  inputs:
    script: |
      curl -fsS https://tools.veracode.com/veracode-cli/install | sh
      export PATH="/home/vsts/work/1/s/:$PATH"
      veracode package --source . --output $(srcPack) --trust
      mv $(srcPack)/*.zip $(srcPack)/analisysPack.zip
  displayName: 'Veracode Auto-Package'

- task: CmdLine@2
  inputs:
    script: |
      export SRCCLR_API_TOKEN=$(SRCCLR_API_TOKEN)
      curl -sSL https://download.sourceclear.com/ci.sh | bash -s â€“ scan --update-advisor --allow-dirty
  displayName: 'Veracode SCA'
  continueOnError: true

- script: |
    curl -O -L https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
  displayName: 'Download Pipeline Scanner'

- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: 'pipeline-scan-LATEST.zip'
    destinationFolder: '$(Build.ArtifactStagingDirectory)'
    cleanDestinationFolder: false
- script: |
      java -jar $(Build.ArtifactStagingDirectory)/pipeline-scan.jar -vid $(APIID) -vkey $(APIKEY) --file '$(analisysPack)' --issue_details true 
  displayName: 'Veracode PipelineScan'
  continueOnError: true

- task: Veracode@3
  inputs:
    ConnectionDetailsSelection: 'Credentials'
    apiId: '$(APIID)'
    apiKey: '$(APIKEY)'
    veracodeAppProfile: '$(veracodeAppProfile)'
    version: '$(build.buildNumber)'
    filepath: '$(analisysPack)'
    createSandBox: false
    createProfile: true
    importResults: true
    failBuildOnPolicyFail: false
  displayName: 'Veracode SAST'

# - task: Veracode Flaw Importer@3
#   inputs:
#     ConnectionDetailsSelection: 'Credentials'
#     apiId: '$(APIID)'
#     apiKey: '$(APIKEY)'
#     veracodeAppProfile: '$(veracodeAppProfile)'
#     sandboxName: 
#     importType: 'All Flaws'
#     workItemType: 'Issue'
#     area: '$(system.teamProject)'
#     addCustomTag: '$(build.buildNumber)'
#     flawImportLimit: '1000'
#   displayName: 'Veracode importando falhas'